@charset "UTF-8";

html {
  font-size: 15px;
}

body {
  font-size: 1rem;
  font-family: 'Noto Sans JP', sans-serif;
  font-weight: 400;
  color: #555;
}

/* header {
  padding: 0 2rem;
  color: #fff;
  background-color: #333;
} */

#menu-button {
  display: block;

  position: fixed;
  top: 1rem;
  right: 1rem;

  width: 3rem;
  height: 3rem;
  background-color: rgb(0, 60, 40);
  border-radius: .5rem;
  /* 背景の角丸を丸形に変形させとときにスムーズに見せたための時間差設定。 */
  transition: 0.8s;
  z-index: 100;
}

.menu-button div {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  
  width: 70%;
  height: 2px;
  background-color: #eee;
  /* 注目1『opacityの効果を0.3秒後に発生させる』命令を
      発生側ではなく、元側に記述する。 */
  transition: .3s;
}

.menu-button.active {
  transform: rotate(-180deg);
}
.menu-button div:nth-of-type(1) {
  top: 30%;
}
.menu-button.active div:nth-of-type(1) {
  transform: rotate(45deg);
  transform-origin: top left;
  top: 22%;
  left: 28%;
}

/* ハンバーガーメニューの真ん中の線を消して、背景を丸形に変形させる。 */
.menu-button.active div:nth-of-type(2) {
  /* 注目1 発生側 */
  opacity: 0;
}
#menu-button.active {
  border-radius: 50%;
}

.menu-button div:nth-of-type(3) {
  top: 70%;
}
.menu-button.active div:nth-of-type(3) {
  transform: rotate(-45deg);
  transform-origin: bottom left;
  bottom: 8%;
  left: 28%;
}

#links-menu {
  position: fixed;
  top: 0;
  left: -100%;

  width: 12rem;
  /*  max-heightにする意味
      リストを表示させたい時は、"overflow: auto;"を指定する。
      その際、親要素に高さを指定する必要がある。
      "height: 100vh;"とするとスクロールされる。
      ただ、
      子要素を"display: flex;"、"justify-content: center;"で
      建て付けた場合にスクロールされない問題が発生する。
      回避策は、親要素の高さを"max-height: 100vh;"で解決できる。 */
  max-height: 100vh;
  padding: 2rem 0 2rem;
  background-color: rgb(155, 245, 215);
  overflow: auto;
  /*  『opacity: 0』でオブジェクトを透明にして
      『隠して』も、要素の存在はあるからクリックできてしまう。
      つまり、透明して隠す場合は、回避するために
      『visibility: hidden』は必須。
      ただ、設置位置を『-100％』で隠くす施作では必要がない。 */
      /* visibility: hidden; */
  opacity: 0;
  transition: 0.5s;
  z-index: 99;
}
#links-menu.active {
  left: 0;
  opacity: 1;
  /* 『opacity: 0』でオブジェクトを透明にして 『隠す』。
      アクティブになった場合はリンクを有効にさせなければならない。*/
      /* visibility: visible; */
}

#links-menu ul {
  display: flex;
  flex-direction: column;
  /* 縦軸Y:0からスタートさせる。 */
  /* justify-content: flex-start; */
  justify-content: center;
  /* 左右中央 */
  align-items: center;
  /* "注意：justify-content: center"を指定したい場合、
      縦の高さを指定しないと設定できない。 */
  height: 100%;
}

#links-menu li:not(:first-of-type) {
  margin-top: 1rem;
}
/* 別の記述方法 */
/* #menu li + li {
  margin-top: 1rem;
} */

#cover-background {
  position: fixed;
  top: 0;
  left: 0;

  width: 100%;
  height: 100vh;
  background-color:rgba(51,51,51,0.9);
  opacity: 0;
  visibility: hidden;
  transition: 0.5s;
  z-index: 98;
}

#cover-background.active {
  opacity: 1;
  visibility: visible;
}

main {
  width: 100%;
  height: 200vh;
  margin: 0 auto;
  padding: 1rem;
  background-color: #eee;
}

